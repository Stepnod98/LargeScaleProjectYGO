Query 1. Find the most popular card in saved decks
Ex. // trovare quante volte compare una carta in tutti i deck salvati e i primi 3 record
db.decks.aggregate([{ $unwind: "$cards" },  { $sortByCount: "$cards.title" }, {$limit :3} ] ) 

Query 2. Find card with highest atk statistic for each set 

db.decks.aggregate([{$unwind:"$sets"}, {$match: {$and: [{"atk": {$exists:true}},{"atk": {$ne:"?"}},{"atk": {$ne:"X000"}},{"atk": {$ne:null}}]}} ,{$group:{_id:{ set: "$sets.setName"},cards:{$push: {card_Name:"$title", atk_Value:"$atk"}},max: { $max : "$atk" }}}, {$match: {"_id.set" : "Structure Deck: Invincible Fortress"}},{$unwind:"$cards"},{$project: {_id: "$_id.set", card:{title: "$cards.card_Name", atk:"$cards.atk_Value", highestAtk : {$cmp:["$cards.atk_Value", "$max"]}}}},{$match:{ "card.highestAtk":{$eq:0}}}])  --->OK!


Query 3. Find decks with less number of archetypes
db.decks.aggregate([{$unwind:"$cards"},{$unwind: "$cards.archetypes"},{$group:{_id:{title: "$title", creator:"$creator"}, total_count: {$sum:1}}},{$sort:{total_count:1}},{$limit:1}]) ---->OK!

Query 4. Find deck with an average atk statistics > X decided by the User
db.decks.aggregate([{$unwind: "$cards"},{$match: {$or:[{"cards.atk": {$exists:1}},{"cards.atk": {$ne:"?"}},{"cards.atk": {$ne:"X000"}},{"cards.atk": {$ne:null}}]}},{$group:{_id:{deck: "$title"},avgAtk: { $avg : "$cards.atk"}}}, {$match:{avgAtk:{$gte:1300}}}]) --->OK

Query 5. Find deck in which the sum of magic and trap cards is greater than the sum of monster cards or viceversa
db.decks.aggregate([{$unwind: "$cards"},{$match:{"cards.types":{$exists:1}}}, {$group:{_id:{deck:"$title"}, cards:{$push:{card_name:"$cards.title", type: "$cards.types"}},total_count:{$sum:1}}}, {$match:{total_count:{$lt:20}}}]) --->OK

Query 6. Find most popular extracards for each type in each deck
db.decks.aggregate([{$unwind: "$extra_deck"},{$unwind: "$extra_deck.types"},{$group:{_id:{type:"$extra_deck.types", title: "$extra_deck.title"}}},{$match:{$or:[ {"_id.type":"Synchro"}, {"_id.type":"Fusion"}, {"_id.type":"Xyz"},{"_id.type":"Link"}]}},{$sortByCount:"$_id.title"},{$limit:10}]) -->OK!


Mongo: 
var deck = [
"title": "deckTitle"; 
"creator": "username"; 
"cards": [{},{}...]; 
"extCards": [{},{}...]
]; 
db.yugioh.insert({deck})


Query 2.Find card by title
Mongo: 
var title="TestTitle" 
db.yugioh.find({title:title})

Query 3.Find cards by statistics  
Mongo: 
var valueAtk: 500
var valueDef: 1500
db.yugioh.find({$and: [{atk:valueAtk},{def:valueDef}]})


Query 4. Find cards by set
Mongo: 
var set = "TestSet"
db.yugioh.find({"sets.setName":set})

Query 5. Find Deck by card
Mongo: 
var cardTitle = "TestFindDeckbyCard"
db.yugioh.find({"cards.title": cardTitle})


Query 6. Find Deck by Usercreator 
Mongo: 
var userCreator = "tinybutterfly563"
db.yugioh.find({creator:userCreator})

Query 7. Find Deck by Title
Mongo: 
var deckTitle = "tinybutterfly563's deck4"
db.yugioh.find({title:deckTitle})

Query 8. Find user by username
Mongo: 
var userLogin: "TestFindByUserName"
db.login.find({"login.username":userLogin})


Query 9. Replace card in a deck  
Mongo:  
var cardInDeck: "Aurora Paragon"
var cardToReplace: "YuliTest"
db.yugioh.updateMany({"cards.title" : cardInDeck},{$set:{"cards.$.title": cardToReplace}})

Query 10. remove card by title
Mongo: 
var removeCard = "Aurora Paragon"
db.yugiOh.deleteMany({"cards.title": removeCard})
db.yugioh.remove({title: removeCard})


Query 11. remove deck by title
Mongo: 
var deckTitle: "redlion769's deck"
db.yugioh.remove({title: deckTitle})
